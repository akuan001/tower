<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tydic.dao.SensorMapper" >
  <resultMap id="BaseResultMap" type="com.tydic.po.Sensor" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="SensorName" property="sensorname" jdbcType="VARCHAR" />
    <result column="TelOperatorId" property="teloperatorid" jdbcType="INTEGER" />
    <result column="NodeCode" property="nodecode" jdbcType="VARCHAR" />
    <result column="Usable" property="usable" jdbcType="VARCHAR" />
    <result column="Model" property="model" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, SensorName, TelOperatorId, NodeCode, Usable, Model
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tydic.po.SensorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_sensor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_sensor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_sensor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tydic.po.SensorExample" >
    delete from tb_sensor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tydic.po.Sensor" >
    insert into tb_sensor (id, SensorName, TelOperatorId, 
      NodeCode, Usable, Model
      )
    values (#{id,jdbcType=INTEGER}, #{sensorname,jdbcType=VARCHAR}, #{teloperatorid,jdbcType=INTEGER}, 
      #{nodecode,jdbcType=VARCHAR}, #{usable,jdbcType=VARCHAR}, #{model,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tydic.po.Sensor" >
    insert into tb_sensor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sensorname != null" >
        SensorName,
      </if>
      <if test="teloperatorid != null" >
        TelOperatorId,
      </if>
      <if test="nodecode != null" >
        NodeCode,
      </if>
      <if test="usable != null" >
        Usable,
      </if>
      <if test="model != null" >
        Model,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sensorname != null" >
        #{sensorname,jdbcType=VARCHAR},
      </if>
      <if test="teloperatorid != null" >
        #{teloperatorid,jdbcType=INTEGER},
      </if>
      <if test="nodecode != null" >
        #{nodecode,jdbcType=VARCHAR},
      </if>
      <if test="usable != null" >
        #{usable,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        #{model,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tydic.po.SensorExample" resultType="java.lang.Integer" >
    select count(*) from tb_sensor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_sensor
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sensorname != null" >
        SensorName = #{record.sensorname,jdbcType=VARCHAR},
      </if>
      <if test="record.teloperatorid != null" >
        TelOperatorId = #{record.teloperatorid,jdbcType=INTEGER},
      </if>
      <if test="record.nodecode != null" >
        NodeCode = #{record.nodecode,jdbcType=VARCHAR},
      </if>
      <if test="record.usable != null" >
        Usable = #{record.usable,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null" >
        Model = #{record.model,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_sensor
    set id = #{record.id,jdbcType=INTEGER},
      SensorName = #{record.sensorname,jdbcType=VARCHAR},
      TelOperatorId = #{record.teloperatorid,jdbcType=INTEGER},
      NodeCode = #{record.nodecode,jdbcType=VARCHAR},
      Usable = #{record.usable,jdbcType=VARCHAR},
      Model = #{record.model,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tydic.po.Sensor" >
    update tb_sensor
    <set >
      <if test="sensorname != null" >
        SensorName = #{sensorname,jdbcType=VARCHAR},
      </if>
      <if test="teloperatorid != null" >
        TelOperatorId = #{teloperatorid,jdbcType=INTEGER},
      </if>
      <if test="nodecode != null" >
        NodeCode = #{nodecode,jdbcType=VARCHAR},
      </if>
      <if test="usable != null" >
        Usable = #{usable,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        Model = #{model,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tydic.po.Sensor" >
    update tb_sensor
    set SensorName = #{sensorname,jdbcType=VARCHAR},
      TelOperatorId = #{teloperatorid,jdbcType=INTEGER},
      NodeCode = #{nodecode,jdbcType=VARCHAR},
      Usable = #{usable,jdbcType=VARCHAR},
      Model = #{model,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="Alias_Base_Column_List" >
    tbSensor.id,tbSensor.SensorName,tbSensor.TelOperatorId,tbSensor.NodeCode,tbSensor.Usable,tbSensor.Model
  </sql>
  <sql id="Alias_Base_Column_As_Alias_List" >
    tbSensor.id as "id",tbSensor.SensorName as "sensorname",tbSensor.TelOperatorId as "teloperatorid",tbSensor.NodeCode as "nodecode",tbSensor.Usable as "usable",tbSensor.Model as "model"
  </sql>
</mapper>