<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd">
	
    <bean id="nodeMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactoryUser" />
        <property name="mapperInterface" value="com.tydic.dao.NodeMapper"/>
    </bean>
    <bean id="sensorMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactoryUser" />
        <property name="mapperInterface" value="com.tydic.dao.SensorMapper"/>
    </bean>
    <bean id="telOperatorMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactoryUser" />
        <property name="mapperInterface" value="com.tydic.dao.TelOperatorMapper"/>
    </bean>
    <bean id="usersMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactoryUser" />
        <property name="mapperInterface" value="com.tydic.dao.UsersMapper"/>
    </bean>
    <bean id="sensorValuesMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactoryUser" />
        <property name="mapperInterface" value="com.tydic.dao.SensorValuesMapper"/>
    </bean>
    <bean id="sensorDailyCunsumpMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactoryUser" />
        <property name="mapperInterface" value="com.tydic.dao.SensorDailyCunsumpMapper"/>
    </bean>
	
    <!-- dataSource 配置 -->
    <bean id="dataSourceUser" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${user.jdbc.url}" />
        <property name="username" value="${user.jdbc.username}" />
        <property name="password" value="${user.jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="maxActive" value="200" />
		<property name="initialSize" value="3" />
		<property name="minIdle" value="3" />
		<!-- maxWait 获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		
		<!--removeAbandoned: 是否自动回收超时连接 -->  
        <property name="removeAbandoned" value="true" />  
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->  
        <property name="removeAbandonedTimeout" value="180" />  
        <property name="logAbandoned" value="true" />  
        <property name="validationQuery">  
            <value>SELECT 1</value>  
        </property>
	</bean>

	<!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactoryUser" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSourceUser"
          p:configLocation="classpath:mybatis-config.xml"
          p:mapperLocations="classpath*:com/tydic/mapper/*.xml"/>

    <!-- 对dataSource 数据源进行事务管理 -->
    <bean id="transactionManagerUser" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSourceUser"/>

    <!-- 事务管理 通知 -->
    <tx:advice id="txAdviceUser" transaction-manager="transactionManagerUser">
        <tx:attributes>
            <!-- 对create,remove,modify 开头的方法进行事务管理,只要有异常就回滚 -->
            <tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="drop*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <!-- 对其他方法 使用默认的事务管理 -->
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    
    <!-- 通用异常处理 -->
    <bean id="exceptionAdvice" class="com.tydic.base.exception.PurchaseExceptionAdvisor"></bean>
    
    <!-- 事务 aop 配置 -->    
    <aop:config>
		
		<!-- 定义切入点 -->  
		<aop:pointcut id="pcUser" expression="execution(* com.tydic.service..*(..))" />  <!-- 事物控制在hsf接口层 -->
		
        <aop:advisor pointcut-ref="pcUser" advice-ref="txAdviceUser" />
        
        <aop:aspect id="exceptionAspectUser" ref="exceptionAdvice" >
            <!-- 环绕增强 在该方法中捕获业务的所有异常，设置回滚，并返回结果码 -->
            <aop:around method="throwAopTreat" pointcut-ref="pcUser"/>
        </aop:aspect>
	</aop:config>
    
    <!-- 启用对事务注解的支持 -->
    <tx:annotation-driven transaction-manager="transactionManagerUser" />


</beans>
